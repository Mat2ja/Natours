/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
	/* we want to start clean, bcs browsers usually add some margins and padding */
	margin: 0;
	padding: 0;
	box-sizing: border-box; /* The width and height properties includes content, padding and border */
}

body {
	font-family: "Lato", sans-serif; /* every child element inherits it, instead from the universal selector, better practice */
	font-weight: 400;
	font-size: 16px;
	line-height: 1.7;
	color: #777;
	padding: 30px;
}

.header {
	height: 95vh; /* 95% of viewport height */
	background-image: linear-gradient(
			to right bottom,
			rgba(126, 213, 111, 0.8),
			rgba(40, 180, 133, 0.8)
		),
		url(../img/hero.jpg);
	background-size: cover;
	background-position: top; /* image top stays but bottom gets cropped when resizing the screen*/
	position: relative;
	clip-path: polygon(
		0 0,
		100% 0,
		100% 75vh,
		0 100%
	); /* distance from left(x-axis) and top(y-axis) for corner of the shape*/
}

.logo-box {
	position: absolute; /* if header werent relative, it would start at top-left corner of the screen, not condsidering <body> padding */
	top: 40px;
	left: 40px;
}

.logo {
	height: 35px;
}

.text-box {
	position: absolute;
	top: 40%;
	left: 50%; /* in relation to the parent element */
	transform: translate(-50%, -50%); /* in relation to the element itself */
	text-align: center; /* centers the text in the middle of itself (we did this for the button) */
}

/** center with flexbox */
/* .text-box {
	height: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
} */

.heading-primary {
	color: white;
	text-transform: uppercase;
	/*? fix for potential shaky animation at the end*/
	backface-visibility: hidden;
	margin-bottom: 60px;
}

.heading-primary-main {
	display: block;
	font-size: 60px;
	font-weight: 400;
	letter-spacing: 35px;
	animation: moveInLeft;
	animation-duration: 1s;
	animation-timing-function: ease-in-out;
	/* 
	animation-iteration-count: 3; 
	animation-delay: 3s;
	animation-fill-mode: forwards; 
	*/
}

.heading-primary-sub {
	display: block;
	font-size: 20px;
	font-weight: 700;
	letter-spacing: 17.4px;
	animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
	0% {
		opacity: 0;
		transform: translateX(-100px); /* left to right */
	}
	80% {
		transform: translateX(10px);
	}
	100% {
		opacity: 1;
		transform: translate(0px); /* the way it looked before the animation */
	}
}

@keyframes moveInRight {
	0% {
		opacity: 0;
		transform: translateX(100px);
	}
	80% {
		transform: translateX(-10px);
	}
	100% {
		opacity: 1;
		transform: translate(0px);
	}
}

@keyframes moveInBottom {
	0% {
		opacity: 0;
		transform: translateY(30px);
	}
	100% {
		opacity: 1;
		transform: translate(0px);
	}
}

.btn:link,
.btn:visited {
	text-transform: uppercase;
	text-decoration: none;
	padding: 15px 40px;
	display: inline-block; /* bcs we added padding/margin so it occupied the space of other elements */
	border-radius: 100px; /* any high number */
	transition: all 0.2s; /* must be on the initial state */
	position: relative; /* for the psuedoelement */
}

.btn:hover {
	transform: translateY(-3px); /* goes up */
	box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
	transform: translateY(-1px); /* in relation to initial link state */
	box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
	background-color: #fff;
	color: #777;
}

/*? pseudoelement is treated as a child of the element */
.btn::after {
	/** must specify content & display */
	content: "";
	display: inline-block;
	height: 100%;
	width: 100%;
	border-radius: 100px;
	position: absolute;
	top: 0;
	left: 0;
	z-index: -1; /* hidden behind the button */
	transition: all .4s;
}

.btn-white::after {
	background-color: #fff;
}

.btn:hover::after {
	transform: scaleX(1.4) scaleY(1.6);
	opacity: 0; /* it animates it fading away completely */
}

.btn-animated {
	animation: moveInBottom .5s ease-out .75s;
	animation-fill-mode: backwards; /* step 1 of animation applied before it even starts */
}